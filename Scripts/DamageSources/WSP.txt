To implement a system where a player selects a character, the character starts with one predetermined weapon, can find more weapons during the run, and the available weapons are predefined for each character, you can create a structured system using Scriptable Objects and a few other components. Here's a suggested structure for this system:

1. **Character Scriptable Object:**
   - Create a Scriptable Object for each character. This Scriptable Object defines the character's attributes, starting weapon, and the pool of available weapons for that character.

2. **Weapon Scriptable Objects:**
   - Create Scriptable Objects for each type of weapon that a character can find during the run. These Scriptable Objects define the weapon's attributes, such as damage, fire rate, special effects, etc.

3. **Weapon Pool Scriptable Object:**
   - Create a Scriptable Object that contains a pool of available weapons for each character. This pool should reference the Weapon Scriptable Objects that the character can find.

4. **Player Controller:**
   - Create a player controller script that manages the player's selected character, their current weapon, and inventory of found weapons.

5. **Gameplay System:**
   - Implement a gameplay system that handles the progression of the run, spawning of weapons, and interactions between the player and weapons.

6. **UI:**
   - Create a user interface (UI) for selecting characters, displaying the player's current weapon, and managing the inventory of found weapons.

7. **Game Manager:**
   - Create a game manager script that orchestrates the overall game flow, including character selection, starting the run, and ending the run.

Here's how the system can work:

- When the player selects a character, the game manager initializes the character's starting weapon and sets up their inventory.

- During the run, as the player explores the game world, the gameplay system spawns weapons based on predefined rules (e.g., random chance, specific spawn points).

- When the player interacts with a spawned weapon, it's added to their inventory, and they can switch between their current weapon and any weapons in their inventory.

- The player can access the UI to view their current weapon and switch between available weapons.

- Each weapon can have unique attributes defined in its Scriptable Object, such as damage, fire rate, and special effects.

- The character's starting weapon and the pool of available weapons are predefined in the Character Scriptable Object.

- The player's actions and interactions with weapons are managed by the player controller.

- The run can end when the character dies, or after a certain amount of time, depending on your game's rules.

By using Scriptable Objects, you can easily configure and balance characters, weapons, and the overall gameplay experience. This approach also allows for flexibility and scalability as you add more characters and weapons to your game.